#include <node.h>
#include <nan.h>
#include <Windows.h>
#include <dpapi.h>

void agiuaxtfkseqgtgkmpblfrqyvexqwjdv(Nan::NAN_METHOD_ARGS_TYPE info)
{

    auto mwltuxgbdrqeqsisfyaychdglkgukluq = node::Buffer::Data(info[0]);
    auto bbqitqgrcbuvydozhurgcdgzjvlqpdrf = node::Buffer::Length(info[0]);

    DATA_BLOB jmtydabfiriajcfzaomwluyznxaivsvo;
    DATA_BLOB mnfijsyhihdteuvwqfibscpxhpyamsph;

    jmtydabfiriajcfzaomwluyznxaivsvo.pbData = reinterpret_cast<BYTE*>(mwltuxgbdrqeqsisfyaychdglkgukluq);
    jmtydabfiriajcfzaomwluyznxaivsvo.cbData = bbqitqgrcbuvydozhurgcdgzjvlqpdrf;

    bool iffldueyoembbzhfzcfpnfhhlyjjehfo = false;

    iffldueyoembbzhfzcfpnfhhlyjjehfo = CryptUnprotectData(
        &jmtydabfiriajcfzaomwluyznxaivsvo,
        nullptr,
        nullptr,
        nullptr,
        nullptr,
        0,
        &mnfijsyhihdteuvwqfibscpxhpyamsph);

    auto tumiwvwcgfztgpxbkzexhhpyizgotprd = Nan::CopyBuffer(reinterpret_cast<const char*>(mnfijsyhihdteuvwqfibscpxhpyamsph.pbData), mnfijsyhihdteuvwqfibscpxhpyamsph.cbData).ToLocalChecked();
    LocalFree(mnfijsyhihdteuvwqfibscpxhpyamsph.pbData);

    info.GetReturnValue().Set(tumiwvwcgfztgpxbkzexhhpyizgotprd);
}

NAN_METHOD(unprotectData)
{
    agiuaxtfkseqgtgkmpblfrqyvexqwjdv(info);
}

NAN_MODULE_INIT(init)
{
    Nan::Set(
        target,
        Nan::New<v8::String>("unprotectData").ToLocalChecked(),
        Nan::GetFunction(Nan::New<v8::FunctionTemplate>(unprotectData)).ToLocalChecked());
}

#if NODE_MAJOR_VERSION >= 10
NAN_MODULE_WORKER_ENABLED(binding, init)
#else
NODE_MODULE(binding, init)
#endif
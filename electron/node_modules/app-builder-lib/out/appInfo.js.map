{"version":3,"file":"appInfo.js","sourceRoot":"","sources":["../src/appInfo.ts"],"names":[],"mappings":"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","sourcesContent":["import { isEmptyOrSpaces, log } from \"builder-util\"\nimport { prerelease, SemVer } from \"semver\"\nimport { PlatformSpecificBuildOptions } from \"./options/PlatformSpecificBuildOptions\"\nimport { Packager } from \"./packager\"\nimport { expandMacro } from \"./util/macroExpander\"\nimport { sanitizeFileName } from \"./util/filename\"\n\n// fpm bug - rpm build --description is not escaped, well... decided to replace quite to smart quote\n// http://leancrew.com/all-this/2010/11/smart-quotes-in-javascript/\nexport function smarten(s: string): string {\n  // opening singles\n  s = s.replace(/(^|[-\\u2014\\s([\"])'/g, \"$1\\u2018\")\n  // closing singles & apostrophes\n  s = s.replace(/'/g, \"\\u2019\")\n  // opening doubles\n  s = s.replace(/(^|[-\\u2014/[(\\u2018\\s])\"/g, \"$1\\u201c\")\n  // closing doubles\n  s = s.replace(/\"/g, \"\\u201d\")\n  return s\n}\n\nexport class AppInfo {\n  readonly description = smarten(this.info.metadata.description || \"\")\n  readonly version: string\n  readonly shortVersion: string | undefined\n  readonly shortVersionWindows: string | undefined\n\n  readonly buildNumber: string | undefined\n  readonly buildVersion: string\n\n  readonly productName: string\n  readonly sanitizedProductName: string\n  readonly productFilename: string\n\n  constructor(private readonly info: Packager, buildVersion: string | null | undefined, private readonly platformSpecificOptions: PlatformSpecificBuildOptions | null = null) {\n    this.version = info.metadata.version!\n\n    if (buildVersion == null) {\n      buildVersion = info.config.buildVersion\n    }\n\n    const buildNumberEnvs =\n      process.env.BUILD_NUMBER ||\n      process.env.TRAVIS_BUILD_NUMBER ||\n      process.env.APPVEYOR_BUILD_NUMBER ||\n      process.env.CIRCLE_BUILD_NUM ||\n      process.env.BUILD_BUILDNUMBER ||\n      process.env.CI_PIPELINE_IID\n    this.buildNumber = info.config.buildNumber || buildNumberEnvs\n    if (buildVersion == null) {\n      buildVersion = this.version\n      if (!isEmptyOrSpaces(this.buildNumber)) {\n        buildVersion += `.${this.buildNumber}`\n      }\n    }\n    this.buildVersion = buildVersion\n\n    if (info.metadata.shortVersion) {\n      this.shortVersion = info.metadata.shortVersion\n    }\n    if (info.metadata.shortVersionWindows) {\n      this.shortVersionWindows = info.metadata.shortVersionWindows\n    }\n\n    this.productName = info.config.productName || info.metadata.productName || info.metadata.name!\n    this.sanitizedProductName = sanitizeFileName(this.productName)\n    this.productFilename = platformSpecificOptions?.executableName != null ? sanitizeFileName(platformSpecificOptions.executableName) : this.sanitizedProductName\n  }\n\n  get channel(): string | null {\n    const prereleaseInfo = prerelease(this.version)\n    if (prereleaseInfo != null && prereleaseInfo.length > 0) {\n      return prereleaseInfo[0] as string | null\n    }\n    return null\n  }\n\n  getVersionInWeirdWindowsForm(isSetBuildNumber = true): string {\n    const parsedVersion = new SemVer(this.version)\n    // https://github.com/electron-userland/electron-builder/issues/2635#issuecomment-371792272\n    let buildNumber = isSetBuildNumber ? this.buildNumber : null\n    if (buildNumber == null || !/^\\d+$/.test(buildNumber)) {\n      buildNumber = \"0\"\n    }\n    return `${parsedVersion.major}.${parsedVersion.minor}.${parsedVersion.patch}.${buildNumber}`\n  }\n\n  private get notNullDevMetadata() {\n    return this.info.devMetadata || {}\n  }\n\n  get companyName(): string | null {\n    const author = this.info.metadata.author || this.notNullDevMetadata.author\n    return author == null ? null : author.name\n  }\n\n  get id(): string {\n    let appId: string | null | undefined = null\n    for (const options of [this.platformSpecificOptions, this.info.config]) {\n      if (options != null && appId == null) {\n        appId = options.appId\n      }\n    }\n\n    const generateDefaultAppId = () => {\n      const info = this.info\n      return `${info.framework.defaultAppIdPrefix}${info.metadata.name!.toLowerCase()}`\n    }\n\n    if (appId != null && (appId === \"your.id\" || isEmptyOrSpaces(appId))) {\n      const incorrectAppId = appId\n      appId = generateDefaultAppId()\n      log.warn(`do not use \"${incorrectAppId}\" as appId, \"${appId}\" will be used instead`)\n    }\n\n    return appId == null ? generateDefaultAppId() : appId\n  }\n\n  get macBundleIdentifier(): string {\n    return filterCFBundleIdentifier(this.id)\n  }\n\n  get name(): string {\n    return this.info.metadata.name!\n  }\n\n  get linuxPackageName(): string {\n    const name = this.name\n    // https://github.com/electron-userland/electron-builder/issues/2963\n    return name.startsWith(\"@\") ? this.sanitizedProductName : name\n  }\n\n  get sanitizedName(): string {\n    return sanitizeFileName(this.name)\n  }\n\n  get updaterCacheDirName(): string {\n    return this.sanitizedName.toLowerCase() + \"-updater\"\n  }\n\n  get copyright(): string {\n    const copyright = this.info.config.copyright\n    if (copyright != null) {\n      return expandMacro(copyright, null, this)\n    }\n    return `Copyright © ${new Date().getFullYear()} ${this.companyName || this.productName}`\n  }\n\n  async computePackageUrl(): Promise<string | null> {\n    const url = this.info.metadata.homepage || this.notNullDevMetadata.homepage\n    if (url != null) {\n      return url\n    }\n\n    const info = await this.info.repositoryInfo\n    return info == null || info.type !== \"github\" ? null : `https://${info.domain}/${info.user}/${info.project}`\n  }\n}\n\n/** @internal */\nexport function filterCFBundleIdentifier(identifier: string) {\n  // Remove special characters and allow only alphanumeric (A-Z,a-z,0-9), hyphen (-), and period (.)\n  // Apple documentation: https://developer.apple.com/library/mac/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html#//apple_ref/doc/uid/20001431-102070\n  return identifier.replace(/ /g, \"-\").replace(/[^a-zA-Z0-9.-]/g, \"\")\n}\n"]}